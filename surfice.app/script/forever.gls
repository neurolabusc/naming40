procedure basic;
BEGIN
	RESETDEFAULTS;
	MESHLOAD('mni152_2009.mz3');
	OVERLAYLOAD('motor_4t95mesh.mz3');
	CLIPAZIMUTHELEVATION(0.37, 0, 140);
	SHADERAMBIENTOCCLUSION(0.5);
	AZIMUTHELEVATION(90, 20);
	SHADERXRAY(1.0, 0.3);
END;

procedure fmri_mesh;
BEGIN
	RESETDEFAULTS;
	MESHLOAD('BrainMesh_ICBM152Right.mz3');
	OVERLAYLOAD('motor_4t95mesh.mz3');
	OVERLAYCOLORNAME(1, 'Red');
	SHADERXRAY(1.0, 0.3);
	AZIMUTHELEVATION(110, 15);
END;

procedure fmri_paint;
BEGIN
	RESETDEFAULTS;
	AZIMUTHELEVATION(70, 15);
	MESHLOAD('BrainMesh_ICBM152Right.mz3');
	OVERLAYLOAD('motor_4t95vol.nii.gz');
	OVERLAYMINMAX(1,2,12);
	OVERLAYLOAD('motor_4t95vol.nii.gz');
	OVERLAYMINMAX(2,-1,-2);
	COLORBARVISIBLE(true);
	OVERLAYTRANSPARENCYONBACKGROUND(25);
END;

CONST
 	kSteps = 100;

procedure track;
VAR
	i: integer;
BEGIN
	RESETDEFAULTS;
	MESHLOAD('stroke.mz3');
	TRACKLOAD('stroke.trk');
	TRACKPREFS(15, 3, 0.5);
	FOR i := 1 TO kSteps DO BEGIN
		CLIPAZIMUTHELEVATION(( (0.8*i)/kSteps ), 0, 130);
		WAIT(20);
	END;
END;




const
 	kFramesPerRotation = 360;

procedure shaders;
var
	i: integer;
	s: single;

BEGIN
	RESETDEFAULTS;
	MESHCOLOR(210, 148, 148);
	MESHLOAD('BrainMesh_ICBM152Left.mz3');
	EDGELOAD('LPBA40.edge');
	CLIPAZIMUTHELEVATION(0.3, 0, 130);
	NODESIZE(6, true);
	EDGESIZE(3,true);
	NODEHEMISPHERE(-1);
	AZIMUTHELEVATION(250, 35);
	EDGECOLOR('ACTC',TRUE);
	NODECOLOR('RED',TRUE);
	NODETHRESH(1.0,1.0);
	EDGETHRESH(0.5,1.0);
	FOR i := 1 to kFramesPerRotation * 5 DO BEGIN
		s := 0.5 + (i+0.0)/72;
		IF s <= 1 THEN
			CAMERADISTANCE(s);
		IF (i MOD kFramesPerRotation) = 0 THEN BEGIN
			CASE (i DIV kFramesPerRotation) OF
				1:  SHADERNAME('metal');
				2: SHADERNAME('wireframe');
				3:  begin
					SHADERNAME('toon');
					SHADERAMBIENTOCCLUSION(0);
				   end;
				4:  begin
					SHADERNAME('wire');
				SHADERFORBACKGROUNDONLY(true);
				   end;
			END;
		END;
		AZIMUTH( round(360.0/kFramesPerRotation));
		WAIT(5);
	END;
END;

procedure spin;
var
	i: integer;
begin
	FOR i := 1 to kFramesPerRotation DO BEGIN
		AZIMUTH( round(360.0/kFramesPerRotation));
		WAIT(5);
	END;
end;

begin
	while true do begin
		basic;
		spin;
		fmri_mesh;
		spin;
		fmri_paint;
		spin;
		track;
		shaders;
	end;
end.


